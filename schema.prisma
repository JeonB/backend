
// schema.prisma

generator client {
    provider = "prisma-client-js"
    output   = "./src/generated/client"
    binaryTargets = ["native", "windows"]
  }

  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
  }

  model User {
    id              String     @id @default(uuid())
    email           String     @unique
    password        String
    name            String
    bio             String?
    interests       String[]   // 관심 분야
    availableDays   String[]   // 가능한 요일 (e.g., ["Mon", "Wed", "Fri"])
    studiesCreated  Study[]    @relation("CreatedStudies")
    studyMembers    StudyMember[]
    createdAt       DateTime   @default(now())
    updatedAt       DateTime   @updatedAt
  }

  model Study {
    id              String        @id @default(uuid())
    title           String
    description     String
    tags            String[]
    dayOfWeek       String        // e.g., "Mon"
    time            String        // e.g., "19:00"
    maxParticipants Int
    createdBy       User          @relation("CreatedStudies", fields: [createdById], references: [id])
    createdById     String
    members         StudyMember[]
    createdAt       DateTime      @default(now())
    updatedAt       DateTime      @updatedAt
  }

  model StudyMember {
    id        String   @id @default(uuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    study     Study    @relation(fields: [studyId], references: [id])
    studyId   String
    status    Status   @default(PENDING)
    joinedAt  DateTime @default(now())

    @@unique([userId, studyId]) // 하나의 유저는 한 스터디에 한 번만 신청 가능
  }

  enum Status {
    PENDING
    ACCEPTED
    REJECTED
  }
